import type { Options } from '../_shared/options'

export const htmlMinimizer = {
	caseSensitive : {
		value : false,
		type  : 'boolean',
		label : 'Case sensitive',
	},
	collapseBooleanAttributes : {
		value : false,
		type  : 'boolean',
		label : 'Collapse boolean attributes',
	},
	collapseInlineTagWhitespace : {
		value : false,
		type  : 'boolean',
		label : 'Collapse inline tag whitespace',
	},
	collapseWhitespace : {
		value : false,
		type  : 'boolean',
		label : 'Collapse whitespace',
	},
	conservativeCollapse : {
		value : false,
		type  : 'boolean',
		label : 'Conservative collapse',
	},
	continueOnParseError : {
		value : false,
		type  : 'boolean',
		label : 'Continue on parse error',
	},
	// customAttrAssign : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Custom attribute assign (RegExp strings)',
	// },
	customAttrCollapse : {
		value : '',
		type  : 'text',
		label : 'Custom attribute collapse (RegExp string)',
	},
	// customAttrSurround : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Custom attribute surround (RegExp strings)',
	// },
	// customEventAttributes : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Custom event attributes (RegExp strings)',
	// },
	decodeEntities : {
		value : false,
		type  : 'boolean',
		label : 'Decode entities',
	},
	html5 : {
		value : true,
		type  : 'boolean',
		label : 'HTML5 parsing',
	},
	// ignoreCustomComments : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Ignore custom comments (RegExp strings)',
	// },
	// ignoreCustomFragments : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Ignore custom fragments (RegExp strings)',
	// },
	includeAutoGeneratedTags : {
		value : true,
		type  : 'boolean',
		label : 'Include auto-generated tags',
	},
	keepClosingSlash : {
		value : false,
		type  : 'boolean',
		label : 'Keep closing slash',
	},
	maxLineLength : {
		value : 0,
		type  : 'number',
		label : 'Max line length (0 = unlimited)',
	},
	minifyCSS : {
		value   : true,
		type    : 'select',
		label   : 'Minify CSS',
		options : [
			{
				value : false,
				label : 'Disabled',
			},
			{
				value : true,
				label : 'Enabled',
			},
			{
				value : 'function',
				label : 'Custom function',
			},
			{
				value : 'object',
				label : 'Options object',
			},
		],
	},
	minifyJS : {
		value   : true,
		type    : 'select',
		label   : 'Minify JS',
		options : [
			{
				value : false,
				label : 'Disabled',
			},
			{
				value : true,
				label : 'Enabled',
			},
			{
				value : 'function',
				label : 'Custom function',
			},
			{
				value : 'object',
				label : 'Options object',
			},
		],
	},
	minifyURLs : {
		value   : false,
		type    : 'select',
		label   : 'Minify URLs',
		options : [
			{
				value : false,
				label : 'Disabled',
			},
			{
				value : true,
				label : 'Enabled (default)',
			},
			{
				value : 'function',
				label : 'Custom function',
			},
			{
				value : 'object',
				label : 'Options object',
			},
			{
				value : 'string',
				label : 'String base URL',
			},
		],
	},
	noNewlinesBeforeTagClose : {
		value : false,
		type  : 'boolean',
		label : 'No newlines before tag close',
	},
	preserveLineBreaks : {
		value : false,
		type  : 'boolean',
		label : 'Preserve line breaks',
	},
	preventAttributesEscaping : {
		value : false,
		type  : 'boolean',
		label : 'Prevent attributes escaping',
	},
	processConditionalComments : {
		value : false,
		type  : 'boolean',
		label : 'Process conditional comments',
	},
	// processScripts : {
	// 	value : [],
	// 	type  : 'array',
	// 	label : 'Process scripts (by type)',
	// },
	quoteCharacter : {
		value : '"',
		type  : 'text',
		label : 'Quote character',
	},
	removeAttributeQuotes : {
		value : false,
		type  : 'boolean',
		label : 'Remove attribute quotes',
	},
	removeComments : {
		value : false,
		type  : 'boolean',
		label : 'Remove comments',
	},
	removeEmptyAttributes : {
		value   : false,
		type    : 'select',
		label   : 'Remove empty attributes',
		options : [
			{
				value : false,
				label : 'Disabled',
			},
			{
				value : true,
				label : 'Enabled',
			},
			{
				value : 'function',
				label : 'Custom function',
			},
		],
	},
	removeEmptyElements : {
		value : false,
		type  : 'boolean',
		label : 'Remove empty elements',
	},
	removeOptionalTags : {
		value : false,
		type  : 'boolean',
		label : 'Remove optional tags',
	},
	removeRedundantAttributes : {
		value : false,
		type  : 'boolean',
		label : 'Remove redundant attributes',
	},
	removeScriptTypeAttributes : {
		value : false,
		type  : 'boolean',
		label : 'Remove script type attributes',
	},
	removeStyleLinkTypeAttributes : {
		value : false,
		type  : 'boolean',
		label : 'Remove style/link type attributes',
	},
	removeTagWhitespace : {
		value : false,
		type  : 'boolean',
		label : 'Remove tag whitespace',
	},
	sortAttributes : {
		value : false,
		type  : 'boolean',
		label : 'Sort attributes',
	},
	sortClassName : {
		value : false,
		type  : 'boolean',
		label : 'Sort class names',
	},
	trimCustomFragments : {
		value : false,
		type  : 'boolean',
		label : 'Trim custom fragments',
	},
	useShortDoctype : {
		value : false,
		type  : 'boolean',
		label : 'Use short doctype',
	},
} satisfies Options
